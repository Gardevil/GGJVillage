using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class ResourceEvent : IEvent
{
    KeyValuePair<ActionEnum, int> pair;

    public ResourceEvent(ActionEnum action, int amount)
    {
        pair = new KeyValuePair<ActionEnum, int>(action, amount);
    }

    public string GetName()
    {
        return "ResourceAdd";
    }

    public object GetData()
    {
        return pair;
    }
}

public abstract class ExploitResurceAction : BaseAction
{
    protected int tripsLeft;
    protected float speed = 3;///m/s
    protected float exploitTimeMax = 5;///segundos
    protected float exploitTimeActual;
    protected bool goingToExploit;///controla si está yendo al recurso o trayéndolo al tótem
    protected Resource resource; ///recurso a explotar
                                
    public int amountGained = 5;

    public override void Initialize()
    {
        tripsLeft = repetitions;
        exploitTimeActual = exploitTimeMax;
        goingToExploit = true;
        resource = GetClosestResource();
        if (resource == null)
        {
            Finish();
        }
        else
        {
            resource.inUse = true;
            villager.moveTo(resource.gameObject);
        }
    }

    protected abstract Resource GetClosestResource();
    protected abstract string GetSpeakText();

    public override void Update()
    {
        if (goingToExploit)
        {
            /// si ya ha llegado a la posición del árbol
            if (villager.standing)
            {
                if (exploitTimeActual == exploitTimeMax)
                {
                    /// acabamos de llegar, decimos algo
                    villager.GetComponent<Speaker>().SpeakUp(GetSpeakText());
                }
                exploitTimeActual -= Time.deltaTime;
                if (exploitTimeActual <= 0)
                {
                    exploitTimeActual = exploitTimeMax;
                    goingToExploit = false;
                    villager.moveToWareHouse();
                }
            }
        }
        else
        {
            /// si ya ha llegado al almacén
            if (villager.standing)
            {
                EventManager.instance.QueueEvent(new ResourceEvent(actionType, amountGained));
                tripsLeft--;
                if (tripsLeft > 0)
                {
                    goingToExploit = true;
                    villager.moveTo(resource.gameObject);
                }
            }
        }
    }

    protected override void Finishing()
    {
        /// se pone como la vuelta de cortar el arbol del último viaje
        tripsLeft = 1;
        goingToExploit = false; 
        if (resource != null)
        {
            resource.inUse = false;
        }
    }

    public override bool IsFinished()
    {
        return tripsLeft == 0;
    }
}
